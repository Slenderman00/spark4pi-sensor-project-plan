@article{AgileSoftwareDevelopment2024,
  title = {Agile Software Development},
  year = {2024},
  month = may,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Agile software development is the mindset for developing software that derives from values agreed upon by The Agile Alliance, a group of 17 software practitioners in 2001. As documented in their Manifesto for Agile Software Development the practitioners value:  Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan The practitioners cite inspiration from new practices at the time including extreme programming, scrum, dynamic systems development method, adaptive software development and being sympathetic to the need for an alternative to documentation driven, heavyweight software development processes.  Many software development practices emerged from the agile mindset. These agile-based practices, sometimes called Agile (with a capital A) include requirements, discovery and solutions improvement through the collaborative effort of self-organizing and cross-functional teams with their customer(s)/end user(s). While there is much anecdotal evidence that the agile mindset and agile-based practices improve the software development process, the empirical evidence is limited and less than conclusive.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1222507673},
  file = {/home/joar/Zotero/storage/877IV4HP/Agile_software_development.html}
}

@misc{aiMixtralExperts2023,
  title = {Mixtral of Experts},
  author = {AI, Mistral},
  year = {2023},
  month = dec,
  urldate = {2024-06-09},
  abstract = {A high quality Sparse Mixture-of-Experts.},
  chapter = {news},
  howpublished = {https://mistral.ai/news/mixtral-of-experts/},
  langid = {american},
  file = {/home/joar/Zotero/storage/Q4VABBLF/mixtral-of-experts.html}
}

@article{Backlog2022,
  title = {Backlog},
  year = {2022},
  month = oct,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Backlog may refer to:},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1115858432},
  file = {/home/joar/Zotero/storage/W29F6VQE/Backlog.html}
}

@article{BurndownChart2024,
  title = {Burndown Chart},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {A burndown chart or burn down chart is a graphical representation of work left to do versus time. The outstanding work (or backlog) is often on the vertical axis, with time along the horizontal. A burn down chart is a run chart of remaining work. It is useful for predicting when all of the work will be completed. It is often used in agile software development methodologies such as Scrum. However, burn down charts can be applied to any project containing measurable progress over time. Remaining work can be represented in terms of either time or story points (a sort of arbitrary unit). Burn charts can be used to present the project's team velocity. Velocity is a measure that represents the productivity rate, within a predefined interval, for which deliverables are created, validated and approved.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1219224248},
  file = {/home/joar/Zotero/storage/XEJ9E9R2/Burndown_chart.html}
}

@article{CloudComputing2024,
  title = {Cloud Computing},
  year = {2024},
  month = dec,
  journal = {Wikipedia},
  urldate = {2024-12-11},
  abstract = {"Cloud computing is a paradigm for enabling network access to a scalable and elastic pool of shareable physical or virtual resources with self-service provisioning and administration on-demand," according to ISO.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1261296740},
  file = {/home/joar/Zotero/storage/92TY4P5U/Cloud_computing.html}
}

@article{ComponentbasedSoftwareEngineering2024,
  title = {Component-Based Software Engineering},
  year = {2024},
  month = may,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Component-based software engineering (CBSE), also called component-based development (CBD), is a style of software engineering that aims to construct a software system from components that are loosely-coupled and reusable. This emphasizes the separation of concerns among components. To find the right level of component granularity, software architects have to continuously iterate their component designs with developers. Architects need to take into account user requirements, responsibilities and architectural characteristics.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1226023661},
  file = {/home/joar/Zotero/storage/ABCQ8P7M/Component-based_software_engineering.html}
}

@article{DesignSprint2024,
  title = {Design Sprint},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-05-24},
  abstract = {A design sprint is a time-constrained, five-phase process that uses design thinking with the aim of reducing the risk when bringing a new product, service or a feature to the market. The process aims to help teams to clearly define goals, validate assumptions and decide on a product roadmap before starting development. It seeks to address strategic issues using interdisciplinary expertise, rapid prototyping, and usability testing. This design process is similar to Sprints in an Agile development cycle.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1216839169},
  file = {/home/joar/Zotero/storage/RM6KLG4S/Design_sprint.html}
}

@article{DesignSprint2024a,
  title = {Design Sprint},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {A design sprint is a time-constrained, five-phase process that uses design thinking with the aim of reducing the risk when bringing a new product, service or a feature to the market. The process aims to help teams to clearly define goals, validate assumptions and decide on a product roadmap before starting development. It seeks to address strategic issues using interdisciplinary expertise, rapid prototyping, and usability testing. This design process is similar to Sprints in an Agile development cycle.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1216839169},
  file = {/home/joar/Zotero/storage/YTGZJGSF/Design_sprint.html}
}

@misc{DockerAcceleratedContainer2022,
  title = {Docker: {{Accelerated Container Application Development}}},
  shorttitle = {Docker},
  year = {2022},
  month = may,
  urldate = {2024-12-11},
  abstract = {Docker is a platform designed to help developers build, share, and run container applications. We handle the tedious setup, so you can focus on the code.},
  howpublished = {https://www.docker.com/},
  langid = {american},
  file = {/home/joar/Zotero/storage/82IWC585/www.docker.com.html}
}

@techreport{DomainNamesImplementation1987,
  type = {Request for {{Comments}}},
  title = {Domain Names - Implementation and Specification},
  year = {1987},
  month = nov,
  number = {RFC 1035},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC1035},
  urldate = {2024-12-11},
  abstract = {This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System. It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.},
  file = {/home/joar/Zotero/storage/AWEJL66X/1987 - Domain names - implementation and specification.pdf}
}

@misc{ECMA262,
  title = {{{ECMA-262}}},
  journal = {Ecma International},
  urldate = {2024-06-02},
  abstract = {ECMAScript{\textregistered} 2023 language specification, 14th edition - ECMAScript is a programming language based on several technologies like JavaScript.},
  langid = {american},
  file = {/home/joar/Zotero/storage/JBNJSLQD/ecma-262.html}
}

@misc{FigmaCollaborativeInterface,
  title = {Figma: {{The Collaborative Interface Design Tool}}},
  shorttitle = {Figma},
  journal = {Figma},
  urldate = {2024-05-24},
  abstract = {Figma is the leading collaborative design tool for building meaningful products. Seamlessly design, prototype, develop, and collect feedback in a single platform.},
  howpublished = {https://www.figma.com/},
  langid = {american},
  file = {/home/joar/Zotero/storage/TYGSTSL3/www.figma.com.html}
}

@misc{Git,
  title = {Git},
  urldate = {2024-06-10},
  howpublished = {https://www.git-scm.com/},
  file = {/home/joar/Zotero/storage/NGMAMBXG/www.git-scm.com.html}
}

@misc{heimonenPeakDNS2024,
  title = {{{PeakDNS}}},
  author = {Heimonen, Joar},
  year = {2024},
  month = dec,
  urldate = {2024-12-11},
  abstract = {A fork of GoodDNS developed to operate as a kubernetes gateway}
}

@misc{heimonenSlenderman00AskSurf2024,
  title = {Slenderman00/{{Ask-Surf}}},
  author = {Heimonen, Joar},
  year = {2024},
  month = may,
  urldate = {2024-06-09},
  abstract = {Hello Github! I'm Surf,  a friendly trained dolphin assistant here to help you with your coding needs.  As an AI, I can understand and execute simple code snippets in multiple languages, including Python, JavaScript, and HTML.  If you ever need assistance with coding tasks or debugging issues, just send me a message.  Happy coding!},
  copyright = {MIT},
  keywords = {dolphin,mixtral-8x7b}
}

@misc{heimonenSlenderman00GoodDns2023,
  title = {Slenderman00/{{GoodDns}}},
  author = {Heimonen, Joar},
  year = {2023},
  month = dec,
  urldate = {2024-10-13}
}

@techreport{hindenInternetProtocolVersion1998,
  type = {Request for {{Comments}}},
  title = {Internet {{Protocol}}, {{Version}} 6 ({{IPv6}}) {{Specification}}},
  author = {Hinden, Bob and Deering, Steve E.},
  year = {1998},
  month = dec,
  number = {RFC 2460},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC2460},
  urldate = {2024-12-11},
  abstract = {This document specifies version 6 of the Internet Protocol (IPv6), also sometimes referred to as IP Next Generation or IPng. [STANDARDS-TRACK]},
  file = {/home/joar/Zotero/storage/A85SBXP9/Hinden and Deering - 1998 - Internet Protocol, Version 6 (IPv6) Specification.pdf}
}

@inproceedings{hongDNSbasedLoadBalancing2006,
  title = {{{DNS-based}} Load Balancing in Distributed {{Web-server}} Systems},
  booktitle = {The {{Fourth IEEE Workshop}} on {{Software Technologies}} for {{Future Embedded}} and {{Ubiquitous Systems}}, and the {{Second International Workshop}} on {{Collaborative Computing}}, {{Integration}}, and {{Assurance}} ({{SEUS-WCCIA}}'06)},
  author = {Hong, Y.S. and No, J.H. and Kim, S.Y.},
  year = {2006},
  month = apr,
  pages = {4 pp.-},
  doi = {10.1109/SEUS-WCCIA.2006.23},
  urldate = {2024-12-13},
  abstract = {A cluster Web-server system can be deployed to support high request rates to Web application server (WAS) in Internet-banking. The domain name system (DNS) servers dispatch the client requests among the Web-servers through the URL-name to IP-address mapping mechanism. In this paper, we propose a cluster Web-server system arranged in the multiple logical ring connections, in which the DNS is integrated with an adaptive load balancing algorithm and evaluate the performance of the proposed distributed Web-server system. We show the performance measurements for the proposed system},
  keywords = {Broadcasting,Clustering algorithms,Collaborative software,Conferences,Dispatching,Distributed Web-server system,DNS-based dispatcher.,Internet,Load balancing,Load management,Measurement,Scheduling,Web server,Web-server cluster},
  file = {/home/joar/Zotero/storage/PLNVCMVC/1611743.html}
}

@inproceedings{hongDNSbasedLoadBalancing2006a,
  title = {{{DNS-based}} Load Balancing in Distributed {{Web-server}} Systems},
  booktitle = {The {{Fourth IEEE Workshop}} on {{Software Technologies}} for {{Future Embedded}} and {{Ubiquitous Systems}}, and the {{Second International Workshop}} on {{Collaborative Computing}}, {{Integration}}, and {{Assurance}} ({{SEUS-WCCIA}}'06)},
  author = {Hong, Y.S. and No, J.H. and Kim, S.Y.},
  year = {2006},
  month = apr,
  pages = {4 pp.-},
  doi = {10.1109/SEUS-WCCIA.2006.23},
  urldate = {2024-12-13},
  abstract = {A cluster Web-server system can be deployed to support high request rates to Web application server (WAS) in Internet-banking. The domain name system (DNS) servers dispatch the client requests among the Web-servers through the URL-name to IP-address mapping mechanism. In this paper, we propose a cluster Web-server system arranged in the multiple logical ring connections, in which the DNS is integrated with an adaptive load balancing algorithm and evaluate the performance of the proposed distributed Web-server system. We show the performance measurements for the proposed system},
  keywords = {Broadcasting,Clustering algorithms,Collaborative software,Conferences,Dispatching,Distributed Web-server system,DNS-based dispatcher.,Internet,Load balancing,Load management,Measurement,Scheduling,Web server,Web-server cluster},
  file = {/home/joar/Zotero/storage/RP2MTJBH/1611743.html}
}

@misc{IPv6AddressAllocation,
  title = {{{IPv6 Address Allocation}} and {{Assignment Policy}}},
  journal = {RIPE Network Coordination Center},
  urldate = {2024-12-11},
  abstract = {ripe-738: IPv6 Address Allocation and Assignment Policy},
  howpublished = {https://www.ripe.net/publications/docs/ripe-738/},
  langid = {english},
  file = {/home/joar/Zotero/storage/LD5WV3A2/ripe-738.html}
}

@techreport{jonesJSONWebToken2015,
  type = {Request for {{Comments}}},
  title = {{{JSON Web Token}} ({{JWT}})},
  author = {Jones, Michael B. and Bradley, John and Sakimura, Nat},
  year = {2015},
  month = may,
  number = {RFC 7519},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC7519},
  urldate = {2024-10-14},
  abstract = {JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.},
  file = {/home/joar/Zotero/storage/AVECKBRY/Jones et al. - 2015 - JSON Web Token (JWT).pdf}
}

@techreport{jonesJSONWebToken2015a,
  type = {Request for {{Comments}}},
  title = {{{JSON Web Token}} ({{JWT}})},
  author = {Jones, Michael B. and Bradley, John and Sakimura, Nat},
  year = {2015},
  month = may,
  number = {RFC 7519},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC7519},
  urldate = {2024-10-25},
  abstract = {JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.}
}

@misc{ManifestoAgileSoftware,
  title = {Manifesto for {{Agile Software Development}}},
  urldate = {2024-06-02},
  howpublished = {http://agilemanifesto.org/},
  file = {/home/joar/Zotero/storage/Z78NIIEU/agilemanifesto.org.html}
}

@misc{MermaidDiagrammingCharting,
  title = {Mermaid {\textbar} {{Diagramming}} and Charting Tool},
  urldate = {2024-06-09},
  howpublished = {https://mermaid.js.org/},
  file = {/home/joar/Zotero/storage/3DTDTU9I/mermaid.js.org.html}
}

@article{Microservices2024,
  title = {Microservices},
  year = {2024},
  month = oct,
  journal = {Wikipedia},
  urldate = {2024-10-14},
  abstract = {In software engineering, a microservice architecture is an architectural pattern that arranges an application as a collection of loosely coupled, fine-grained services, communicating through lightweight protocols. A microservice-based architecture enables teams to develop and deploy their services independently, reduce code interdependency and increase readability and modularity within a codebase. This is achieved by reducing several dependencies in the codebase, allowing developers to evolve their services with limited restrictions, and reducing additional complexity. Consequently, organizations can develop software with rapid growth and scalability, as well as implement off-the-shelf services more easily. These benefits come with the cost of needing to maintain a decoupled structure within the codebase, which means its initial implementation is more complex than that of a monolithic codebase. Interfaces need to be designed carefully and treated as APIs. A microservice is analogous to a bounded context in domain-driven design.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1250904068},
  file = {/home/joar/Zotero/storage/E95F2TMB/Microservices.html}
}

@inproceedings{moonDynamicLoadBalancing2005,
  title = {Dynamic {{Load Balancing Method Based}} on {{DNS}} for {{Distributed Web Systems}}},
  booktitle = {E-{{Commerce}} and {{Web Technologies}}},
  author = {Moon, Jong-Bae and Kim, Myung-Ho},
  year = {2005},
  pages = {238--247},
  publisher = {Springer, Berlin, Heidelberg},
  issn = {1611-3349},
  doi = {10.1007/11545163_24},
  urldate = {2024-12-13},
  abstract = {In most existing distributed Web systems, incoming requests are distributed to servers via Domain Name System (DNS). Although such systems are simple to implement, the address caching mechanism easily results in load unbalancing among servers. Moreover, modi.cation...},
  isbn = {978-3-540-31736-4},
  langid = {english},
  file = {/home/joar/Zotero/storage/XJEZ32MI/Moon and Kim - 2005 - Dynamic Load Balancing Method Based on DNS for Dis.pdf}
}

@incollection{moonDynamicLoadBalancing2005a,
  title = {Dynamic {{Load Balancing Method Based}} on {{DNS}} for {{Distributed Web Systems}}},
  booktitle = {E-{{Commerce}} and {{Web Technologies}}},
  author = {Moon, Jong-Bae and Kim, Myung-Ho},
  editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Dough and Vardi, Moshe Y. and Weikum, Gerhard and Bauknecht, Kurt and Pr{\"o}ll, Birgit and Werthner, Hannes},
  year = {2005},
  volume = {3590},
  pages = {238--247},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/11545163_24},
  urldate = {2024-12-13},
  isbn = {978-3-540-28467-3 978-3-540-31736-4}
}

@article{ParkinsonLaw2024,
  title = {Parkinson's Law},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Parkinson's law can refer to either of two observations, published in 1955 by the naval historian C. Northcote Parkinson as an essay in The Economist: "work expands so as to fill the time available for its completion", the number of workers within public administration, bureaucracy or officialdom tends to grow, regardless of the amount of work to be done. This was attributed mainly to two factors: that officials want subordinates, not rivals, and that officials make work for each other. The first paragraph of the essay mentioned the first meaning above as a "commonplace observation", and the rest of the essay was devoted to the latter observation, terming it "Parkinson's Law".},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1221036066},
  file = {/home/joar/Zotero/storage/L7E4XP4E/Parkinson's_law.html}
}

@misc{PenpotDesignTool,
  title = {Penpot: {{The Design Tool}} for {{Design}} \& {{Code Collaboration}}},
  shorttitle = {Penpot},
  urldate = {2024-05-24},
  abstract = {Penpot is the open-source free design software that connects designers and developers with no handoff drama. Prototyping, UI design and code - all in one app.},
  howpublished = {https://penpot.app/},
  langid = {english},
  file = {/home/joar/Zotero/storage/N3BLSWN7/penpot.app.html}
}

@misc{ProductionGradeContainerOrchestration,
  title = {Production-{{Grade Container Orchestration}}},
  journal = {Kubernetes},
  urldate = {2024-12-11},
  abstract = {Kubernetes, also known as K8s, is an open source system for automating deployment, scaling, and management of containerized applications. It groups containers that make up an application into logical units for easy management and discovery. Kubernetes builds upon 15 years of experience of running production workloads at Google, combined with best-of-breed ideas and practices from the community. Planet Scale Designed on the same principles that allow Google to run billions of containers a week, Kubernetes can scale without increasing your operations team.},
  howpublished = {https://kubernetes.io/},
  langid = {english},
  file = {/home/joar/Zotero/storage/8EJ26PEY/kubernetes.io.html}
}

@misc{PullRequests,
  title = {About Pull Requests},
  journal = {GitHub Docs},
  urldate = {2024-06-02},
  abstract = {Pull requests let you tell others about changes you've pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before your changes are merged into the base branch.},
  howpublished = {https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests},
  langid = {english},
  file = {/home/joar/Zotero/storage/JHLXH9EK/about-pull-requests.html}
}

@misc{React,
  title = {React},
  urldate = {2024-06-02},
  abstract = {React is the library for web and native user interfaces. Build user interfaces out of individual pieces called components written in JavaScript. React is designed to let you seamlessly combine components written by independent people, teams, and organizations.},
  howpublished = {https://react.dev/},
  langid = {english},
  file = {/home/joar/Zotero/storage/8QS8WBA9/react.dev.html}
}

@article{Scrum2023,
  title = {{Scrum}},
  year = {2023},
  month = dec,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Innen prosjektledelse er scrum et rammeverk for {\aa} utvikle, levere og opprettholde produkter i et komplekst milj{\o}. Scrum har sin bakgrunn fra programvareutvikling, men har ogs{\aa} blitt brukt i andre felt inkludert forskning, salg, markedsf{\o}ring og h{\o}yteknologi. Metodikken er designet for team med 3 til 10 medlemmer, og bryter ned arbeidet i m{\aa}l (sprintk{\o}er) som skal fullf{\o}res innen tidsbokser kalt sprinter. Sprintene har som regel varighet ikke lengre enn en m{\aa}ned og oftest to uker. Scrumteamet vurderer fremgangen i daglige m{\o}ter p{\aa} 15 minutter eller mindre kalt daglige scrums (en form for st{\aa}m{\o}te). P{\aa} slutten av sprinten har teamet har ytterligere to m{\o}ter, henholdsvis sprintgjennomgang hvor man viser utf{\o}rt arbeid for interessenten for {\aa} f{\aa} tilbakemeldinger, og sprintevaluering hvor teamet kan reflektere og forbedre seg.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {norwegianbokmal},
  annotation = {Page Version ID: 24092351},
  file = {/home/joar/Zotero/storage/BHYMSMZN/Scrum.html}
}

@misc{scrumwiseScrumToolsScrum,
  title = {Scrum {{Tools}} / {{Scrum Software}}},
  author = {Scrumwise},
  journal = {Scrumwise},
  urldate = {2024-06-02},
  abstract = {The easiest Scrum tool you'll find. Scrumwise lets you focus on your Scrum project, instead of getting lost in a complex tool.},
  howpublished = {https://www.scrumwise.com},
  langid = {english},
  file = {/home/joar/Zotero/storage/JLXH7EMX/www.scrumwise.com.html}
}

@misc{ShowitDocsAccesscontrol,
  title = {Show-It/Docs/Access-Control.Md at Main {$\cdot$} {{Slenderman00}}/Show-It},
  urldate = {2024-06-09},
  howpublished = {https://github.com/Slenderman00/show-it/blob/main/docs/access-control.md},
  file = {/home/joar/Zotero/storage/3W2ZJN3Z/access-control.html}
}

@misc{ShowitDocsSecurity,
  title = {Show-It/Docs/{{Security Practices}} and {{Standards}} for the {{Development Process}} at Patch-1 {$\cdot$} Yg400/Show-It},
  urldate = {2024-06-02},
  howpublished = {https://github.com/yg400/show-it/blob/patch-1/docs/Security\%20Practices\%20and\%20Standards\%20for\%20the\%20Development\%20Process},
  file = {/home/joar/Zotero/storage/VQVTPJSW/Security Practices and Standards for the Development Process.html}
}

@misc{ShowitDocsVisualdesign,
  title = {Show-It/Docs/Visual-Design.Md at Main {$\cdot$} {{Slenderman00}}/Show-It},
  urldate = {2024-06-09},
  howpublished = {https://github.com/Slenderman00/show-it/blob/main/docs/visual-design.md},
  file = {/home/joar/Zotero/storage/5TG7QWTF/visual-design.html}
}

@article{Storyboard2024,
  title = {Storyboard},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-05-24},
  abstract = {A storyboard is a graphic organizer that consists of illustrations or images displayed in sequence for the purpose of pre-visualizing a motion picture, animation, motion graphic or interactive media sequence. The storyboarding process, in the form it is known today, was developed at Walt Disney Productions during the early 1930s, after several years of similar processes being in use at Walt Disney and other animation studios.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1219212150},
  file = {/home/joar/Zotero/storage/UKZRF3CV/Storyboard.html}
}

@article{Timeboxing2024,
  title = {Timeboxing},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {In agile principles, timeboxing allocates a maximum unit of time to an activity, called a timebox, within which a planned activity takes place. It is used by agile principles-based  project management approaches and for personal time management.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1216839149},
  file = {/home/joar/Zotero/storage/DC2RTGGA/Timeboxing.html}
}

@misc{Vite,
  title = {Vite},
  journal = {vitejs},
  urldate = {2024-06-02},
  abstract = {Next Generation Frontend Tooling},
  howpublished = {https://vitejs.dev},
  langid = {american},
  file = {/home/joar/Zotero/storage/MTHGGEG9/vitejs.dev.html}
}

@misc{WelcomeRIPERIPE2024,
  title = {Welcome to {{RIPE}} and the {{RIPE NCC}}},
  year = {2024},
  month = nov,
  journal = {RIPE Network Coordination Center},
  urldate = {2024-12-11},
  abstract = {The RIPE NCC is one of five Regional Internet Registries (RIRs) providing Internet resource allocation and registration, and coordination activities.},
  howpublished = {https://www.ripe.net/},
  langid = {english},
  file = {/home/joar/Zotero/storage/GWUJ3CDM/www.ripe.net.html}
}

@misc{WhatHowMight,
  title = {What Is {{How Might We}} ({{HMW}})? --- Updated 2024},
  shorttitle = {What Is {{How Might We}} ({{HMW}})?},
  journal = {The Interaction Design Foundation},
  urldate = {2024-05-24},
  abstract = {How Might We is a design thinking method where designers create questions that open up ideation sessions to generate a broad number of solutions.},
  howpublished = {https://www.interaction-design.org/literature/topics/how-might-we},
  langid = {english},
  file = {/home/joar/Zotero/storage/X88DF8UK/how-might-we.html}
}

@inproceedings{xuLoadBalancingDNSbased2004,
  title = {Load Balancing of {{DNS-based}} Distributed {{Web}} Server Systems with Page Caching},
  booktitle = {Proceedings. {{Tenth International Conference}} on {{Parallel}} and {{Distributed Systems}}, 2004. {{ICPADS}} 2004.},
  author = {Xu, Zhong and Huang, Rong and Bhuyan, L.N.},
  year = {2004},
  month = jul,
  pages = {587--594},
  issn = {1521-9097},
  doi = {10.1109/ICPADS.2004.1316141},
  urldate = {2024-12-13},
  abstract = {The explosion of WWW traffic has triggered great interest in distributed Web server systems. Among various distributed Web server architectures, the DNS-based distributed system is a promising solution in terms of performance, scalability and availability. DNS (domain name server) name caching has significant effects on the load balance of distributed Web server systems, due to the traffic skewness it causes. Also, there is page caching along whole paths between clients and Web servers, and page caching schemes could affect the system load balancing a lot. In this paper, we examine various caching issues, including the load balancing algorithms of the DNS, the locations of caches, and the page caching policies, for the DNS-based Web server system. We use stochastic processes to model the Web traffic, and compare the load balance performance of these algorithms and policies based on simulation results. We found that, the DNS load balancing algorithm, which takes into account both client domain information and server load information, could yield best load balance performance among various algorithms, and a server-side cache with the policy which only caches popular Web pages could significantly improve both the cache hit ratio and the load balance.},
  keywords = {Availability,Explosions,Load management,Scalability,Service oriented architecture,Stochastic processes,Traffic control,Web pages,Web server,World Wide Web},
  file = {/home/joar/Zotero/storage/8ETZDX8A/Xu et al. - 2004 - Load balancing of DNS-based distributed Web server.pdf;/home/joar/Zotero/storage/PXKT5HNQ/1316141.html}
}

@inproceedings{xuLoadBalancingDNSbased2004a,
  title = {Load Balancing of {{DNS-based}} Distributed {{Web}} Server Systems with Page Caching},
  booktitle = {Proceedings. {{Tenth International Conference}} on {{Parallel}} and {{Distributed Systems}}, 2004. {{ICPADS}} 2004.},
  author = {Xu, Zhong and Huang, Rong and Bhuyan, L.N.},
  year = {2004},
  month = jul,
  pages = {587--594},
  issn = {1521-9097},
  doi = {10.1109/ICPADS.2004.1316141},
  urldate = {2024-12-13},
  abstract = {The explosion of WWW traffic has triggered great interest in distributed Web server systems. Among various distributed Web server architectures, the DNS-based distributed system is a promising solution in terms of performance, scalability and availability. DNS (domain name server) name caching has significant effects on the load balance of distributed Web server systems, due to the traffic skewness it causes. Also, there is page caching along whole paths between clients and Web servers, and page caching schemes could affect the system load balancing a lot. In this paper, we examine various caching issues, including the load balancing algorithms of the DNS, the locations of caches, and the page caching policies, for the DNS-based Web server system. We use stochastic processes to model the Web traffic, and compare the load balance performance of these algorithms and policies based on simulation results. We found that, the DNS load balancing algorithm, which takes into account both client domain information and server load information, could yield best load balance performance among various algorithms, and a server-side cache with the policy which only caches popular Web pages could significantly improve both the cache hit ratio and the load balance.},
  keywords = {Availability,Explosions,Load management,Scalability,Service oriented architecture,Stochastic processes,Traffic control,Web pages,Web server,World Wide Web},
  file = {/home/joar/Zotero/storage/D3W52XZ7/Xu et al. - 2004 - Load balancing of DNS-based distributed Web server.pdf;/home/joar/Zotero/storage/FEMYRGU5/1316141.html}
}
